(()=>{"use strict";var n={837:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);t&&i[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),r&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=r):s[2]=r),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},350:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},890:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(350),a=r.n(t),o=r(837),i=r.n(o)()(a());i.push([n.id,':root {\n  --dark-background-color: #101f2c;\n  --light-background-color: #0d3448;\n\n  --accent-color: #25a4ba;\n  --accent-color-muted: #124a5e;\n\n  --text-color-light: #70c8db;\n  --text-color: #26a8be;\n}\n\n::-webkit-scrollbar {\n  width: 0.5em;\n}\n\n::-webkit-scrollbar-track {\n  background-color: rgb(37, 164, 186, 0.2);\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--accent-color);\n  border-radius: 100vw;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  background-color: var(--dark-background-color);\n  color: var(--text-color);\n}\n\n.page-wrapper,\n.total-wrapper,\n.crafts-wrapper,\n.breakdown-wrapper {\n  height: 93vh;\n  scrollbar-gutter: stable both-edges;\n}\n\nbody,\ninput,\nbutton {\n  font-family: Roboto, Verdana, Geneva, Tahoma, sans-serif;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.hidden {\n  display: none;\n}\n\n.recipe-wrapper,\n.breakdown-wrapper,\n.todo-wrapper,\n.total-wrapper {\n  background-color: var(--light-background-color);\n}\n\n.page-wrapper {\n  display: grid;\n  gap: 1em;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 1fr 2fr;\n}\n\n.search-bar {\n  align-self: start;\n\n  padding: 0.5em 1em;\n  margin-inline: 0em;\n\n  border-radius: 15px;\n\n  text-transform: none;\n}\n\n.crafts-wrapper {\n  grid-column: 1/2;\n  grid-row: 1/3;\n  align-self: end;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(22, 1fr);\n  gap: 5px;\n  align-items: start;\n  padding-top: 1em;\n  padding-right: 1em;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  background-color: var(--light-background-color);\n\n  font-size: 18px;\n  text-transform: uppercase;\n}\n\n.craft-container {\n  padding: 0.5em 0.5em;\n\n  cursor: pointer;\n}\n\n.craft-container:hover,\n.selected {\n  background-color: var(--accent-color);\n  color: white;\n}\n\n.selected {\n  transition: background-color 0.2s;\n  transition: transform 0.2s;\n  transform: translateX(10px);\n}\n\n.recipe-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  align-self: stretch;\n\n  padding: 1em;\n  background-color: var(--light-background-color);\n}\n\n.recipe-wrapper > * {\n}\n\n.recipe-title {\n  color: white;\n}\n\n.recipe-container {\n  display: flex;\n  flex-direction: column;\n\n  gap: 5px;\n}\n\n.recipe-ingredient-container {\n  background-color: var(--accent-color);\n  color: black;\n}\n\n.recipe-ingredient {\n  display: flex;\n  gap: 1em;\n  justify-content: space-between;\n  margin-inline: 1em;\n}\n\n.recipe-buttons {\n  display: flex;\n  justify-content: center;\n\n  margin-block: 0.5em;\n}\n\n.recipe-buttons input {\n  width: 2em;\n}\n\n.todo-wrapper {\n  grid-row: 2/3;\n  grid-column: 2/3;\n\n  align-self: end;\n  justify-self: normal;\n}\n\n.breakdown-wrapper {\n  grid-row: 1/3;\n  grid-column: 3/5;\n\n  overflow-y: scroll;\n  padding: 1em;\n}\n\n.breakdown-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  /* grid-template-columns: 1fr 1fr 1fr; */\n  gap: 1em;\n\n  padding: 1em;\n}\n\n.breakdown-item-container {\n  cursor: pointer;\n  flex: 0;\n  background-color: rgb(37, 164, 186, 0.2);\n  padding: 1em;\n\n  display: flex;\n  /* flex-wrap: wrap; */\n  align-items: flex-start;\n  gap: 5px;\n}\n\n.breakdown-item-container:hover {\n  transition: background-color 0.3s;\n  background-color: rgb(37, 164, 186, 0.5);\n}\n\n.breakdown-parent {\n  display: flex;\n  gap: 1em;\n  justify-content: space-between;\n\n  color: white;\n}\n\n.breakdown-child:not(.hidden) {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: start;\n}\n\n.breakdown-item {\n  display: flex;\n  gap: 1em;\n\n  align-self: stretch;\n  margin-inline: 1em;\n  padding-inline: 1em;\n\n  background-color: var(--accent-color);\n  color: black;\n}\n\n.breakdown-item-amount::before {\n  content: "x";\n}\n\n.todo-wrapper {\n  grid-column: 2/3;\n  grid-row: 2/3;\n\n  overflow-y: scroll;\n  align-self: start;\n  height: calc(84 * 2 / 3 * 1vh);\n\n  padding: 1em;\n}\n\n.todo-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.todo-container input {\n  width: 20px;\n  background-color: var(--accent-color);\n}\n\n.total-wrapper {\n  grid-area: 1 / 5 / 3 / 6;\n\n  overflow-y: scroll;\n\n  padding: 1em;\n}\n\n.total-container {\n  display: flex;\n  gap: 1em;\n  flex-wrap: wrap;\n}\n\n.total-item-container {\n  display: flex;\n  gap: 1em;\n\n  padding-inline: 1em;\n\n  background-color: var(--accent-color);\n  color: black;\n}\n\n.total-item-amount::before {\n  content: "x";\n}\n',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"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",sourcesContent:[':root {\r\n  --dark-background-color: #101f2c;\r\n  --light-background-color: #0d3448;\r\n\r\n  --accent-color: #25a4ba;\r\n  --accent-color-muted: #124a5e;\r\n\r\n  --text-color-light: #70c8db;\r\n  --text-color: #26a8be;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 0.5em;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background-color: rgb(37, 164, 186, 0.2);\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: var(--accent-color);\r\n  border-radius: 100vw;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: var(--dark-background-color);\r\n  color: var(--text-color);\r\n}\r\n\r\n.page-wrapper,\r\n.total-wrapper,\r\n.crafts-wrapper,\r\n.breakdown-wrapper {\r\n  height: 93vh;\r\n  scrollbar-gutter: stable both-edges;\r\n}\r\n\r\nbody,\r\ninput,\r\nbutton {\r\n  font-family: Roboto, Verdana, Geneva, Tahoma, sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.recipe-wrapper,\r\n.breakdown-wrapper,\r\n.todo-wrapper,\r\n.total-wrapper {\r\n  background-color: var(--light-background-color);\r\n}\r\n\r\n.page-wrapper {\r\n  display: grid;\r\n  gap: 1em;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: 1fr 2fr;\r\n}\r\n\r\n.search-bar {\r\n  align-self: start;\r\n\r\n  padding: 0.5em 1em;\r\n  margin-inline: 0em;\r\n\r\n  border-radius: 15px;\r\n\r\n  text-transform: none;\r\n}\r\n\r\n.crafts-wrapper {\r\n  grid-column: 1/2;\r\n  grid-row: 1/3;\r\n  align-self: end;\r\n\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(22, 1fr);\r\n  gap: 5px;\r\n  align-items: start;\r\n  padding-top: 1em;\r\n  padding-right: 1em;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n\r\n  background-color: var(--light-background-color);\r\n\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.craft-container {\r\n  padding: 0.5em 0.5em;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n.craft-container:hover,\r\n.selected {\r\n  background-color: var(--accent-color);\r\n  color: white;\r\n}\r\n\r\n.selected {\r\n  transition: background-color 0.2s;\r\n  transition: transform 0.2s;\r\n  transform: translateX(10px);\r\n}\r\n\r\n.recipe-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n  align-self: stretch;\r\n\r\n  padding: 1em;\r\n  background-color: var(--light-background-color);\r\n}\r\n\r\n.recipe-wrapper > * {\r\n}\r\n\r\n.recipe-title {\r\n  color: white;\r\n}\r\n\r\n.recipe-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  gap: 5px;\r\n}\r\n\r\n.recipe-ingredient-container {\r\n  background-color: var(--accent-color);\r\n  color: black;\r\n}\r\n\r\n.recipe-ingredient {\r\n  display: flex;\r\n  gap: 1em;\r\n  justify-content: space-between;\r\n  margin-inline: 1em;\r\n}\r\n\r\n.recipe-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  margin-block: 0.5em;\r\n}\r\n\r\n.recipe-buttons input {\r\n  width: 2em;\r\n}\r\n\r\n.todo-wrapper {\r\n  grid-row: 2/3;\r\n  grid-column: 2/3;\r\n\r\n  align-self: end;\r\n  justify-self: normal;\r\n}\r\n\r\n.breakdown-wrapper {\r\n  grid-row: 1/3;\r\n  grid-column: 3/5;\r\n\r\n  overflow-y: scroll;\r\n  padding: 1em;\r\n}\r\n\r\n.breakdown-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  /* grid-template-columns: 1fr 1fr 1fr; */\r\n  gap: 1em;\r\n\r\n  padding: 1em;\r\n}\r\n\r\n.breakdown-item-container {\r\n  cursor: pointer;\r\n  flex: 0;\r\n  background-color: rgb(37, 164, 186, 0.2);\r\n  padding: 1em;\r\n\r\n  display: flex;\r\n  /* flex-wrap: wrap; */\r\n  align-items: flex-start;\r\n  gap: 5px;\r\n}\r\n\r\n.breakdown-item-container:hover {\r\n  transition: background-color 0.3s;\r\n  background-color: rgb(37, 164, 186, 0.5);\r\n}\r\n\r\n.breakdown-parent {\r\n  display: flex;\r\n  gap: 1em;\r\n  justify-content: space-between;\r\n\r\n  color: white;\r\n}\r\n\r\n.breakdown-child:not(.hidden) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: start;\r\n}\r\n\r\n.breakdown-item {\r\n  display: flex;\r\n  gap: 1em;\r\n\r\n  align-self: stretch;\r\n  margin-inline: 1em;\r\n  padding-inline: 1em;\r\n\r\n  background-color: var(--accent-color);\r\n  color: black;\r\n}\r\n\r\n.breakdown-item-amount::before {\r\n  content: "x";\r\n}\r\n\r\n.todo-wrapper {\r\n  grid-column: 2/3;\r\n  grid-row: 2/3;\r\n\r\n  overflow-y: scroll;\r\n  align-self: start;\r\n  height: calc(84 * 2 / 3 * 1vh);\r\n\r\n  padding: 1em;\r\n}\r\n\r\n.todo-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.todo-container input {\r\n  width: 20px;\r\n  background-color: var(--accent-color);\r\n}\r\n\r\n.total-wrapper {\r\n  grid-area: 1 / 5 / 3 / 6;\r\n\r\n  overflow-y: scroll;\r\n\r\n  padding: 1em;\r\n}\r\n\r\n.total-container {\r\n  display: flex;\r\n  gap: 1em;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.total-item-container {\r\n  display: flex;\r\n  gap: 1em;\r\n\r\n  padding-inline: 1em;\r\n\r\n  background-color: var(--accent-color);\r\n  color: black;\r\n}\r\n\r\n.total-item-amount::before {\r\n  content: "x";\r\n}\r\n'],sourceRoot:""}]);const c=i},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],c=0;c<n.length;c++){var l=n[c],d=t.base?l[0]+t.base:l[0],s=o[d]||0,u="".concat(d," ").concat(s);o[d]=s+1;var m=r(u),A={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)e[m].references++,e[m].updater(A);else{var p=a(A,t);t.byIndex=c,e.splice(c,0,{identifier:u,updater:p,references:1})}i.push(u)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=r(o[i]);e[c].references--}for(var l=t(n,a),d=0;d<o.length;d++){var s=r(o[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}o=l}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),a=r.n(t),o=r(569),i=r.n(o),c=r(565),l=r.n(c),d=r(216),s=r.n(d),u=r(589),m=r.n(u),A=r(890),p={};function f(n){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},f(n)}function g(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,(void 0,a=function(n,e){if("object"!==f(n)||null===n)return n;var r=n[Symbol.toPrimitive];if(void 0!==r){var t=r.call(n,"string");if("object"!==f(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(t.key),"symbol"===f(a)?a:String(a)),t)}var a}function b(n,e,r){return e&&g(n.prototype,e),r&&g(n,r),Object.defineProperty(n,"prototype",{writable:!1}),n}p.styleTagTransform=m(),p.setAttributes=l(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=s(),e()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals;var v,w={all:v=[],findByName:function(n){return v.find((function(e){return e.name===n}))}},E=b((function n(e,r,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.name=r,this.element=e,this.rarity=t,this.type="resource",w.all.push(this)}));function y(n){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},y(n)}function C(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,(void 0,a=function(n,e){if("object"!==y(n)||null===n)return n;var r=n[Symbol.toPrimitive];if(void 0!==r){var t=r.call(n,"string");if("object"!==y(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(t.key),"symbol"===y(a)?a:String(a)),t)}var a}new E("fe","iron","common"),new E("c6hn","benzene","common"),new E("membrane","membrane","common"),new E("memory","memory substrate","common"),new E("al","aluminum","common"),new E("ta","tantalum","common"),new E("W","tungsten","common"),new E("be","beryllium","common"),new E("cu","copper","common"),new E("ni","nickel","common"),new E("co","cobalt","common"),new E("xe","xenon","common"),new E("ar","argon","common"),new E("ti","titanium","common"),new E("hncn","alkanes","common"),new E("cl","chlorine","common"),new E("xf4","tetraflourides","common"),new E("il","ionic liquids","common"),new E("au","gold","common"),new E("nd","neodymium","common"),new E("sb","antimony","common"),new E("v","vanadium","common"),new E("pd","paladium","common"),new E("rc","rothicite","common"),new E("li","lithium","common"),new E("tsn","tasine","common"),new E("yb","ytterbium","common"),new E("vr","veryl","common"),new E("vy","vytinium","common"),new E("pu","plutonium","common"),new E("ag","silver","common"),new E("lube","lubricant","common"),new E("solv","solvent","common"),new E("cs","caesium","common"),new E("ie","indicite","common"),new E("eu","europium","common"),new E("fibr","fiber","common"),new E("cos","cosmetic","common"),new E("poly","polymer","common"),new E("dy","dysporium","common"),new E("u","uranium","common"),new E("ad","aldumite","common"),new E("bio","biosuppressant","common"),new E("adh","adhesive","common"),new E("adh","sealant","common");var h=function(){var n=[];return{all:n,findByName:function(e){return n.find((function(n){return n.name===e}))}}}(),B=function(){function n(e,r,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.name=e,this.rarity=r,this.ingredients=n.cost(t),this.type="recipe",h.all.push(this)}var e,r;return e=n,r=[{key:"cost",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=[];return n.forEach((function(n){var t={};t.item=n[0],t.amount=n[1]*e,r.push(t)})),r}},{key:"breakdown",value:function(e){for(var r=JSON.parse(JSON.stringify(e.item.ingredients)),t=[];!r.every((function(n){return"resource"===n.item.type}));)r.forEach((function(n,e){"resource"===n.item.type?t.push(n):n.item.ingredients.forEach((function(e){var t=JSON.parse(JSON.stringify(e));t.amount*=n.amount,r.push(t)})),r.splice(e,1)}));r.forEach((function(n){t.push(n)}));var a=n.consolidate(t);return{result:t,consolidated:a}}},{key:"consolidate",value:function(n){var e=JSON.parse(JSON.stringify(n)).reduce((function(n,e){var r=e.item.name;return null==n[r]&&(n[r]=0),n[r]+=e.amount,n}),{}),r=Object.entries(e),t=[];return r.forEach((function(n){var e={};e.item=w.findByName(n[0]),e.amount=n[1],t.push(e)})),t}}],null&&C(e.prototype,null),r&&C(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}(),k=w.findByName("iron"),x=w.findByName("benzene"),L=w.findByName("membrane"),N=w.findByName("memory substrate"),S=w.findByName("aluminum"),q=w.findByName("tantalum"),j=w.findByName("tungsten"),Y=w.findByName("beryllium"),T=w.findByName("copper"),O=w.findByName("nickel"),Q=w.findByName("cobalt"),I=w.findByName("xenon"),P=w.findByName("argon"),R=w.findByName("titanium"),D=w.findByName("alkanes"),J=w.findByName("chlorine"),Z=w.findByName("tetraflourides"),z=w.findByName("ionic liquids"),M=w.findByName("gold"),K=w.findByName("neodymium"),U=w.findByName("antimony"),V=w.findByName("vanadium"),G=w.findByName("paladium"),W=w.findByName("rothicite"),X=w.findByName("lithium"),F=(w.findByName("tasine"),w.findByName("ytterbium")),H=w.findByName("veryl"),_=w.findByName("vytinium"),$=w.findByName("plutonium"),nn=w.findByName("silver"),en=w.findByName("lubricant"),rn=w.findByName("solvent"),tn=w.findByName("caesium"),an=w.findByName("indicite"),on=w.findByName("europium"),cn=w.findByName("fiber"),ln=w.findByName("cosmetic"),dn=w.findByName("polymer"),sn=w.findByName("dysporium"),un=w.findByName("uranium"),mn=w.findByName("aldumite"),An=w.findByName("biosuppressant"),pn=w.findByName("adhesive"),fn=w.findByName("sealant"),gn=new B("adaptive frame","common",[[k,1],[S,1]]),bn=new B("isocentered magnet","common",[[O,1],[Q,1]]),vn=new B("isotopic coolant","common",[[Z,1],[z,1]]),wn=new B("mag pressure tank","uncommon",[[O,1],[S,2]]),En=(new B("polytextile","uncommon",[[cn,2],[ln,1]]),new B("reactive gauge","common",[[T,1],[S,2]])),yn=new B("tau grade rheostat","uncommon",[[Y,1],[T,1]]),Cn=new B("zero wire","common",[[nn,1],[T,1]]),hn=new B("austentic manifold","uncommon",[[O,2],[En,1],[k,2]]),Bn=new B("comm relay","uncommon",[[yn,1],[bn,1]]),kn=new B("drilling rig","rare",[[j,3],[En,1],[en,2]]),xn=new B("molecular sieve","rare",[[wn,1],[z,2],[L,2]]),Ln=(new B("monopropellant","rare",[[wn,1],[En,1],[D,2]]),new B("paramagnon conductor","rare",[[M,1],[K,1],[Cn,3]])),Nn=new B("positron battery","rare",[[yn,1],[U,2],[V,2]]),Sn=new B("semimetal wafer","rare",[[M,2],[U,2],[Cn,1]]),qn=new B("supercooled magnet","rare",[[vn,1],[bn,1],[K,3]]),jn=(new B("zero-g gimbal","rare",[[bn,1],[en,2],[q,2]]),new B("control rod","exotic",[[sn,3],[hn,1],[vn,1]]),new B("microsend regulator","exotic",[[X,2],[yn,1],[qn,1],[on,4]])),Yn=new B("nuclear fuel rod","exotic",[[rn,2],[Sn,1],[un,3]]),Tn=(new B("power circuit","exotic",[[dn,2],[Ln,1],[G,4],[Nn,1]]),new B("sterile nanotubes","exotic",[[rn,2],[V,2],[xn,1]])),On=new B("aldumite drilling rig","unique",[[jn,1],[mn,4],[kn,1],[tn,2]]),Qn=new B("indicite wafer","unique",[[an,4],[Sn,1],[tn,2],[rn,2]]);function In(n){return In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},In(n)}function Pn(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,(void 0,a=function(n,e){if("object"!==In(n)||null===n)return n;var r=n[Symbol.toPrimitive];if(void 0!==r){var t=r.call(n,"string");if("object"!==In(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(t.key),"symbol"===In(a)?a:String(a)),t)}var a}new B("rothicite magnet","unique",[[W,4],[Sn,1],[qn,1],[X,2]]),new B("substrate molucule sieve","unique",[[Tn,2],[N,3],[xn,1],[An,2]]),new B("veryl-treated manifold","unique",[[F,2],[hn,1],[en,2],[H,4]]),new B("vytinium fuel rod","unique",[[Yn,1],[_,4],[Qn,1],[$,2]]),new B("extractor chlorine mk1","building",[[S,5],[O,4],[T,3]]),new B("extractor chlorine mk2","building",[[gn,3],[xn,2],[V,4],[En,2]]),new B("extractor liquid mk1","building",[[x,1],[L,4],[S,1]]),new B("extractor liquid mk2","building",[[x,1],[L,4],[S,1]]),new B("extractor solid mk1","building",[[j,4],[k,1],[S,2]]),new B("extractor solid mk2","building",[[vn,2],[kn,1],[j,4],[gn,3]]),new B("extractor solid mk3","building",[[vn,4],[On,1],[j,6],[gn,5]]),new B("extractor gas mk1","building",[[x,1],[L,4],[S,1]]),new B("extractor gas mk2","building",[[Sn,2],[gn,3],[hn,1],[q,4]]),new B("solar array","building",[[Y,2],[T,3],[S,4]]),new B("wind turbine","building",[[O,3],[Q,2],[S,5]]),new B("wind turbine - advanced","building",[[bn,2],[S,5]]),new B("fueled generator","building",[[hn,1],[j,4],[bn,1],[yn,1]]),new B("powered switch","building",[[T,2],[S,2]]),new B("industrial light post","building",[[I,4],[gn,4],[Cn,3]]),new B("light post","building",[[I,2],[T,3],[S,4]]),new B("industrial wall light","building",[[P,1],[T,1],[S,1]]),new B("transfer container","building",[[j,5],[k,8],[en,4]]),new B("storage - solid","building",[[k,6],[gn,3],[S,5]]),new B("storage - solid - medium","building",[[k,10],[gn,5],[S,8]]),new B("storage - solid - large","building",[[k,20],[gn,10],[S,16]]),new B("storage - liquid","building",[[O,5],[gn,3],[S,6]]),new B("storage - liquid - medium","building",[[O,8],[gn,5],[S,10]]),new B("storage - liquid - large","building",[[O,16],[gn,10],[S,20]]),new B("storage - gas","building",[[j,5],[gn,3],[T,6]]),new B("storage - gas - medium","building",[[j,8],[gn,5],[T,10]]),new B("storage - gas - large","building",[[j,16],[gn,10],[T,20]]),new B("warehouse - small","building",[[gn,3],[R,5],[S,6]]),new B("warehouse - medium","building",[[gn,5],[R,8],[S,10]]),new B("warehouse - large","building",[[gn,10],[R,16],[S,20]]),new B("simple fabricator","building",[[fn,2],[j,4],[Cn,3],[S,8]]),new B("compound fabricator","building",[[j,8],[pn,4],[Cn,5],[vn,2]]),new B("industrial workbench","building",[[k,3],[S,4]]),new B("cooking station","building",[[D,3],[k,4],[T,3]]),new B("pharmaceutical lab","building",[[J,4],[k,3],[x,3],[S,4]]),new B("weapon workbench","building",[[fn,3],[O,2],[k,4],[pn,3]]),new B("spacesuit workbench","building",[[cn,3],[ln,4],[S,4]]),new B("research lab","building",[[Y,2],[T,2],[S,4]]),new B("scan booster","building",[[Y,2],[T,3],[S,4]]),new B("scan booster - advanced","building",[[bn,1],[Bn,1],[Cn,3],[S,5]]),new B("scan booster - millitary grade","building",[[Ln,1],[qn,1],[Bn,2],[S,6]]),new B("cargo link","building",[[Y,2],[k,20],[Cn,2],[S,12]]),new B("cargo link - inter-system","building",[[k,20],[En,3],[Bn,1],[S,12]]),new B("crew station","building",[[O,3],[k,2],[S,5]]),new B("landing pad with shipbuilder","building",[[Y,2],[k,30],[gn,18],[Cn,2]]),new B("landing pad - small","building",[[k,2],[S,2]]),new B("mission board","building",[[Y,2],[Cn,2],[S,4]]),new B("self-service bounty clearance","building",[[Y,2],[T,2],[S,4]]);var Rn,Dn,Jn,Zn,zn,Mn,Kn,Un,Vn=new(function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.all=[]}var e,r;return e=n,r=[{key:"findByName",value:function(n){return this.all.find((function(e){return e.item.name===n}))}},{key:"save",value:function(){localStorage.setItem("localTodo",JSON.stringify(this.all))}},{key:"addToList",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=this.findByName(n.name);if(r)r.amount+=1*e;else{var t={};t.item=n,t.amount=1*e,this.all.unshift(t)}this.save()}},{key:"deleteItemByName",value:function(n){var e=this.findByName(n);this.all.splice(this.all.indexOf(e),1),this.save()}},{key:"deleteItem",value:function(n){this.all.splice(this.all.indexOf(n),1),this.save()}},{key:"increaseQuantity",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.findByName(n).amount+=1*e,this.save()}},{key:"decreaseQuantity",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=this.findByName(n);r.amount>=2&&(r.amount-=1*e,this.save())}},{key:"clearList",value:function(){this.all=[],this.save()}}],r&&Pn(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),n}()),Gn=(Rn=function(n){n.addEventListener("keydown",(function(n){isNaN(n.key)&&"Delete"!==n.key&&"Backspace"!==n.key&&"ArrowRight"!==n.key&&"ArrowLeft"!==n.key&&"Enter"!==n.key&&"Tab"!==n.key&&"Control"!==n.key&&("a"===n.key&&!0===n.ctrlKey||"c"===n.key&&!0===n.ctrlKey||"v"===n.key&&!0===n.ctrlKey||n.preventDefault())})),n.addEventListener("click",(function(){document.activeElement!==n&&n.select()})),n.addEventListener("change",(function(){n.value<1?n.value=1:n.value=1*n.value}))},Dn=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=document.querySelector(".recipe-container");r.replaceChildren(""),document.querySelector(".recipe-title").textContent="".concat(n.name," (").concat(1*e,")"),n.ingredients.forEach((function(n){var t=document.createElement("div");t.classList.add("recipe-ingredient-container");var a=document.createElement("div");a.classList.add("recipe-ingredient");var o=document.createElement("div");o.classList.add("recipe-ingredient-name");var i=document.createElement("div");i.classList.add("recipe-ingredient-amount"),o.textContent=n.item.name,i.textContent=n.amount*e,a.appendChild(o),a.appendChild(i),t.appendChild(a),r.appendChild(t)}))},Jn=function(n){var e=document.querySelector(".recipe-wrapper");e.replaceChildren("");var r=document.createElement("div"),t=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),i=document.createElement("button"),c=document.createElement("input"),l=document.createElement("button");r.classList.add("recipe-title"),t.classList.add("recipe-rarity"),a.classList.add("recipe-container"),o.classList.add("recipe-buttons"),i.classList.add("decrease-btn"),c.classList.add("recipe-quantity"),l.classList.add("increase-btn");var d=document.createElement("button");d.classList.add("recipe-add-btn"),d.textContent="Add",t.textContent=n.rarity,i.textContent="-",l.textContent="+",c.value=1,e.appendChild(r),e.appendChild(t),e.appendChild(a),Dn(n),d.addEventListener("click",(function(){Vn.addToList(n,c.value),Kn(),zn()})),l.addEventListener("click",(function(){c.value=1*c.value+1,c.value<1&&(c.value=1),Dn(n,c.value)})),i.addEventListener("click",(function(){c.value=1*c.value-1,c.value<1&&(c.value=1),Dn(n,c.value)})),Rn(c),function(n,e){n.addEventListener("input",(function(){var r=n.value;r<=1&&(r=1),Dn(e,r)}))}(c,n),o.appendChild(i),o.appendChild(c),o.appendChild(l),e.appendChild(o),e.appendChild(d)},Zn=function(n){Array.from(document.querySelectorAll(".craft-container:not(.hidden)")).forEach((function(n){n.classList.remove("selected")})),null!=n&&n.classList.add("selected")},zn=function(){var n=document.querySelector(".breakdown-container");n.replaceChildren(""),Vn.all.forEach((function(e){var r=document.createElement("div");r.classList.add("breakdown-item-container");var t=document.createElement("div");t.classList.add("breakdown-child");var a=document.createElement("div");a.classList.add("breakdown-parent");var o=document.createElement("div");o.classList.add("breakdown-parent-item");var i=document.createElement("div");i.classList.add("breakdown-parent-amount"),o.textContent=e.item.name,i.textContent=e.amount,a.appendChild(o),a.appendChild(i),r.appendChild(a),B.breakdown(e).consolidated.forEach((function(n){var a=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div");a.classList.add("breakdown-item"),o.classList.add("breakdown-item-name"),i.classList.add("breakdown-item-amount"),o.textContent=n.item.name,i.textContent=n.amount*e.amount,a.appendChild(o),a.appendChild(i),t.appendChild(a),t.classList.add("hidden"),r.appendChild(t)})),r.addEventListener("click",(function(){t.classList.toggle("hidden")})),n.appendChild(r)})),Mn()},Mn=function(){var n=[],e=(document.querySelector(".total-wrapper"),document.querySelector(".total-container"));e.replaceChildren(""),Vn.all.forEach((function(e){B.breakdown(e).consolidated.forEach((function(r){r.amount*=e.amount,n.push(r)}))})),B.consolidate(n).forEach((function(n){var r=document.createElement("div");r.classList.add("total-item-container");var t=document.createElement("div");t.classList.add("total-item");var a=document.createElement("div");a.classList.add("total-item-amount"),t.textContent=n.item.name,a.textContent=n.amount,r.appendChild(t),r.appendChild(a),e.appendChild(r)}))},Kn=function(){var n=document.querySelector(".todo-clear-btn");0===Vn.all.length?n.classList.add("hidden"):n.classList.remove("hidden"),document.querySelector(".todo-wrapper");var e=document.querySelector(".todo-container");e.replaceChildren(""),Vn.all.forEach((function(n){var r=document.createElement("div"),t=document.createElement("div"),a=document.createElement("div"),o=document.createElement("input"),i=document.createElement("button"),c=document.createElement("button");r.classList.add("todo-item"),t.classList.add("todo-item-name"),a.classList.add("todo-item-buttons"),o.classList.add("todo-item-amount"),i.classList.add("todo-item-decrease"),c.classList.add("todo-item-increase"),Un(n,{todoInput:o,todoDecrease:i,todoIncrease:c}),t.textContent=n.item.name,o.value=n.amount,i.textContent="-",c.textContent="+",a.appendChild(i),a.appendChild(o),a.appendChild(c),r.appendChild(t),r.appendChild(a),e.appendChild(r)}))},Un=function(n,e){e.todoDecrease.addEventListener("click",(function(){"1"===e.todoInput.value?(Vn.deleteItem(n),Kn(),zn()):(Vn.decreaseQuantity(n.item.name),e.todoInput.value=n.amount,zn())})),e.todoIncrease.addEventListener("click",(function(){Vn.increaseQuantity(n.item.name),e.todoInput.value=n.amount,zn()})),Rn(e.todoInput),e.todoInput.addEventListener("input",(function(){Vn.findByName(n.item.name).amount=e.todoInput.value,zn()}))},{render:function(){var n,e,r,t,a,o,i,c,l,d,s,u,m;!function(){var n=document.createElement("div");n.classList.add("page-wrapper");var e=document.createElement("input");e.classList.add("search-bar"),e.placeholder="Search craft, building, ...";var r=document.createElement("div");r.classList.add("crafts-wrapper");var t=document.createElement("div");t.classList.add("recipe-wrapper");var a=document.createElement("div");a.classList.add("breakdown-wrapper");var o=document.createElement("div");o.classList.add("todo-wrapper");var i=document.createElement("div");i.classList.add("total-wrapper"),document.body.appendChild(n),r.appendChild(e),n.appendChild(r),n.appendChild(t),n.appendChild(o),n.appendChild(a),n.appendChild(i)}(),n=document.querySelector(".crafts-wrapper"),h.all.sort((function(n,e){return n.name>e.name?1:n.name==e.name?0:-1})),h.all.forEach((function(e){var r=document.createElement("div");r.classList.add("craft-container"),r.textContent=e.name,r.setAttribute("data-name",e.name),r.tabIndex=-1,r.addEventListener("click",(function(){Jn(e),Zn(r)})),r.addEventListener("focusin",(function(){Jn(e),Zn(r)})),n.appendChild(r)})),e=document.querySelector(".breakdown-wrapper"),r=document.createElement("div"),t=document.createElement("div"),r.classList.add("breakdown-container"),t.classList.add("breakdown-title"),t.textContent="Todo Breakdown",e.appendChild(t),e.appendChild(r),a=document.querySelector(".todo-wrapper"),o=document.createElement("div"),i=document.createElement("div"),c=document.createElement("button"),o.classList.add("todo-title"),i.classList.add("todo-container"),c.classList.add("todo-clear-btn"),c.classList.add("hidden"),o.textContent="Todo List",c.textContent="Clear List",c.addEventListener("click",(function(){Vn.clearList(),Kn(),zn()})),a.appendChild(o),a.appendChild(c),a.appendChild(i),l=document.querySelector(".total-wrapper"),d=document.createElement("div"),s=document.createElement("div"),d.classList.add("total-container"),s.classList.add("total-title"),s.textContent="Total",l.appendChild(s),l.appendChild(d),Kn(),zn(),u=document.querySelector(".search-bar"),m=document.querySelector(".craft-container"),Zn(m),m.focus(),window.addEventListener("keydown",(function(n){var e=Array.from(document.querySelectorAll(".craft-container:not(.hidden)")),r=e.find((function(n){return n.classList.contains("selected")}));if(void 0===r&&(r=e[0],Zn(r)),"ArrowDown"===n.key){n.preventDefault();var t=e.indexOf(r);if(t!==e.length-1){r.classList.remove("selected");var a=e[t+1];a.classList.add("selected"),a.focus()}}if("ArrowUp"===n.key&&0==n.shiftKey){n.preventDefault();var o=e.indexOf(r);if(0!==o){r.classList.remove("selected");var i=e[o+-1];i.classList.add("selected"),i.focus()}else u.focus(),u.select()}if(!0===n.shiftKey&&"ArrowUp"===n.key&&(n.preventDefault(),u.focus(),u.select()),document.activeElement.classList.contains("search-bar")||"input"!==document.activeElement.tagName.toLocaleLowerCase()&&(n.code>="KeyA"&&n.code<="KeyZ"&&!1===n.ctrlKey&&(u.focus(),u.select()),"Backspace"===n.key&&u.focus()),document.activeElement.classList.contains("craft-container")&&"Enter"===n.key){var c=h.findByName(document.activeElement.getAttribute("data-name"));Vn.addToList(c),Kn(),zn()}document.activeElement.classList.contains("search-bar")&&(console.log("searchbar-enter"),"Enter"===n.key&&(Vn.addToList(h.findByName(r.getAttribute("data-name"))),Kn(),zn()))})),function(){var n=document.querySelector(".search-bar");n.addEventListener("input",(function(e){var r=n.value.toLocaleLowerCase().trimStart(),t=Array.from(document.querySelectorAll(".craft-container"));if(null!=t){t.forEach((function(n){n.classList.remove("hidden"),n.textContent.includes(r)||n.classList.add("hidden")}));var a=document.querySelector(".craft-container:not(.hidden)");null!=a&&Zn(a)}}))}()}});if(null!=localStorage.getItem("localTodo")){var Wn=JSON.parse(localStorage.getItem("localTodo"));Vn.all=Wn}Gn.render()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,